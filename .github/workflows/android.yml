name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.17.0"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: MobileApp

      - name: Create google-services.json
        working-directory: MobileApp
        run: echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 -d > app/google-services.json

      # --- Inject API Keys into local.properties ---
      - name: Create local.properties file
        working-directory: MobileApp
        run: touch local.properties

      - name: Inject Hugging Face API Token into local.properties
        working-directory: MobileApp
        run: echo "HF_API_TOKEN=${{ secrets.HF_API_TOKEN }}" >> local.properties

      - name: Inject CurrencyLayer API Key into local.properties
        working-directory: MobileApp
        run: echo "CURRENCYLAYER_API_KEY=${{ secrets.CURRENCYLAYER_API_KEY }}" >> local.properties

      # --- Bump versionName and versionCode ---
      - name: Bump patch version
        id: bump_version
        working-directory: MobileApp/app
        run: |
          # Extract current versionName (e.g. 1.0.2)
          current_version=$(grep 'versionName' build.gradle.kts | head -1 | awk -F'"' '{print $2}')
          prefix=$(echo $current_version | awk -F. '{print $1"."$2}')
          patch=$(echo $current_version | awk -F. '{print $3}')
          if [ -z "$patch" ]; then patch=0; fi
          new_patch=$((patch + 1))
          new_version="$prefix.$new_patch"
          echo "NEW_VERSION_NAME=$new_version" >> $GITHUB_ENV

          # Extract current versionCode and increment
          current_code=$(grep 'versionCode' build.gradle.kts | head -1 | awk '{print $3}')
          new_code=$((current_code + 1))
          echo "NEW_VERSION_CODE=$new_code" >> $GITHUB_ENV

      - name: Set version in Gradle
        uses: chkfung/android-version-actions@v1.2.2
        with:
          gradlePath: MobileApp/app/build.gradle.kts
          versionCode: ${{ env.NEW_VERSION_CODE }}
          versionName: ${{ env.NEW_VERSION_NAME }}

      - name: Build release APK
        run: ./gradlew assembleDebug
        working-directory: MobileApp

      - name: Upload artifact to Firebase App Distribution
        uses: nguyentrongkhanhduy/Firebase-Distribution-Github-Action@master
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers
          file: MobileApp/app/build/outputs/apk/debug/app-debug.apk
